name: CI/CD
on: push
#  push:
#    branches:
#      - master

jobs:
#  build-android:
#    name: Build Android
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: 'dev'
#      - run: flutter pub get
#      - run: flutter analyze
#      - run: flutter build apk --build-number="$GITHUB_RUN_NUMBER" --verbose
#      - run: git log --format="%s (%h)" ${{ github.event.after }}^.. > release-notes.txt
#      - name: Deploy to Firebase App Distribution
#        uses: w9jds/firebase-action@master
#        with:
#          args: appdistribution:distribute "build/app/outputs/flutter-apk/app-release.apk" --app "${{secrets.FIREBASE_APP_ID}}" --groups "bptesters,web" --release-notes-file "release-notes.txt"
#        env:
#          FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
#      - name: Upload .apk
#        uses: actions/upload-artifact@master
#        with:
#          name: build-android
#          path: build/app/outputs/flutter-apk/app-release.apk
   build-ios:
     name: Build iOS
     runs-on: macOS-latest
     steps:
       - uses: actions/checkout@v1
       - uses: actions/setup-java@v1
         with:
           java-version: '12.x'
       - uses: apple-actions/import-codesign-certs@v1
         with:
          p12-file-base64: ${{ secrets.P12_BAS64 }}
          p12-password: ${{ secrets.P12_BAS64_PASS }}
       - uses: subosito/flutter-action@v1
         with:
             channel: 'dev'
       - run: flutter pub get
#       - run: flutter clean
#       - run: flutter analyze
       - run: mkdir -p "~/Library/MobileDevice/Provisioning Profiles"
       - run: echo "${{ secrets.MOBILEPROVISION_BASE64 }}" | base64 --decode - > "~/Library/MobileDevice/Provisioning Profiles/${{ secrets.MOBILEPROVISION_FILENAME }}"
       - run: flutter build ios --release --build-number="$GITHUB_RUN_NUMBER" --verbose
#       - run: cd ios && pod install && cd ..
#       - uses: yukiarrr/ios-build-action@v0.5.0
#         with:
#           project-path: ios/Runner.xcodeproj
#           workspace-path: ios/Runner.xcworkspace
#           p12-base64: ${{ secrets.P12_BASE64 }}
#           certificate-password: ${{ secrets.P12_BASE64_PASS }}
#           mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
#           code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
#           team-id: ${{ secrets.TEAM_ID }}
#           export-method: development
       - run: git log --format="%s (%h)" ${{ github.event.after }}^.. > release-notes.txt
       - name: Deploy to Firebase App Distribution
         uses: w9jds/firebase-action@master
         with:
           args: appdistribution:distribute "output.ipa" --app "${{secrets.FIREBASE_APP_ID}}" --groups "bptesters,web" --release-notes-file "release-notes.txt"
         env:
           FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
#  build-web:
#    name: Build Website
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: 'dev'
#      - run: flutter config --enable-web
#      - run: flutter pub get
#      - run: flutter analyze
#      - run: flutter build web --verbose
#      - name: Deploy to Firebase Hosting
#        uses: w9jds/firebase-action@master
#        with:
#          args: deploy --only hosting
#        env:
#          FIREBASE_TOKEN: ${{secrets.FIREBASE_TOKEN}}
#      - name: Upload web
#        uses: actions/upload-artifact@master
#        with:
#          name: build-web
#          path: build/web
